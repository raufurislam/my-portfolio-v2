{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/next@15.5.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/src/build/webpack/loaders/next-flight-loader/server-reference.ts","turbopack:///[project]/node_modules/.pnpm/next@15.5.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/src/server/web/spec-extension/cookies.ts","turbopack:///[project]/node_modules/.pnpm/next@15.5.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/src/server/web/spec-extension/adapters/reflect.ts","turbopack:///[project]/node_modules/.pnpm/next@15.5.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/src/server/web/spec-extension/adapters/request-cookies.ts","turbopack:///[project]/node_modules/.pnpm/next@15.5.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/src/server/create-deduped-by-callsite-server-error-logger.ts","turbopack:///[project]/node_modules/.pnpm/next@15.5.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/src/server/request/utils.ts","turbopack:///[project]/node_modules/.pnpm/next@15.5.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/src/server/request/cookies.ts","turbopack:///[project]/node_modules/.pnpm/next@15.5.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/src/server/web/spec-extension/adapters/headers.ts","turbopack:///[project]/node_modules/.pnpm/next@15.5.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/src/server/request/headers.ts","turbopack:///[project]/node_modules/.pnpm/next@15.5.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/src/server/request/draft-mode.ts","turbopack:///[project]/node_modules/.pnpm/next@15.5.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/headers.js","turbopack:///[project]/node_modules/.pnpm/next@15.5.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-validate.ts","turbopack:///[project]/src/lib/apiFetch.ts","turbopack:///[project]/src/actions/user.ts"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nexport { registerServerReference } from 'react-server-dom-webpack/server'\n","export {\n  RequestCookies,\n  ResponseCookies,\n  stringifyCookie,\n} from 'next/dist/compiled/@edge-runtime/cookies'\n","export class ReflectAdapter {\n  static get<T extends object>(\n    target: T,\n    prop: string | symbol,\n    receiver: unknown\n  ): any {\n    const value = Reflect.get(target, prop, receiver)\n    if (typeof value === 'function') {\n      return value.bind(target)\n    }\n\n    return value\n  }\n\n  static set<T extends object>(\n    target: T,\n    prop: string | symbol,\n    value: any,\n    receiver: any\n  ): boolean {\n    return Reflect.set(target, prop, value, receiver)\n  }\n\n  static has<T extends object>(target: T, prop: string | symbol): boolean {\n    return Reflect.has(target, prop)\n  }\n\n  static deleteProperty<T extends object>(\n    target: T,\n    prop: string | symbol\n  ): boolean {\n    return Reflect.deleteProperty(target, prop)\n  }\n}\n","import { RequestCookies } from '../cookies'\n\nimport { ResponseCookies } from '../cookies'\nimport { ReflectAdapter } from './reflect'\nimport { workAsyncStorage } from '../../../app-render/work-async-storage.external'\nimport type { RequestStore } from '../../../app-render/work-unit-async-storage.external'\n\n/**\n * @internal\n */\nexport class ReadonlyRequestCookiesError extends Error {\n  constructor() {\n    super(\n      'Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#options'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyRequestCookiesError()\n  }\n}\n\n// We use this to type some APIs but we don't construct instances directly\nexport type { ResponseCookies }\n\n// The `cookies()` API is a mix of request and response cookies. For `.get()` methods,\n// we want to return the request cookie if it exists. For mutative methods like `.set()`,\n// we want to return the response cookie.\nexport type ReadonlyRequestCookies = Omit<\n  RequestCookies,\n  'set' | 'clear' | 'delete'\n> &\n  Pick<ResponseCookies, 'set' | 'delete'>\n\nexport class RequestCookiesAdapter {\n  public static seal(cookies: RequestCookies): ReadonlyRequestCookies {\n    return new Proxy(cookies as any, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'clear':\n          case 'delete':\n          case 'set':\n            return ReadonlyRequestCookiesError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n}\n\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies')\n\nexport function getModifiedCookieValues(\n  cookies: ResponseCookies\n): ResponseCookie[] {\n  const modified: ResponseCookie[] | undefined = (cookies as unknown as any)[\n    SYMBOL_MODIFY_COOKIE_VALUES\n  ]\n  if (!modified || !Array.isArray(modified) || modified.length === 0) {\n    return []\n  }\n\n  return modified\n}\n\ntype SetCookieArgs =\n  | [key: string, value: string, cookie?: Partial<ResponseCookie>]\n  | [options: ResponseCookie]\n\nexport function appendMutableCookies(\n  headers: Headers,\n  mutableCookies: ResponseCookies\n): boolean {\n  const modifiedCookieValues = getModifiedCookieValues(mutableCookies)\n  if (modifiedCookieValues.length === 0) {\n    return false\n  }\n\n  // Return a new response that extends the response with\n  // the modified cookies as fallbacks. `res` cookies\n  // will still take precedence.\n  const resCookies = new ResponseCookies(headers)\n  const returnedCookies = resCookies.getAll()\n\n  // Set the modified cookies as fallbacks.\n  for (const cookie of modifiedCookieValues) {\n    resCookies.set(cookie)\n  }\n\n  // Set the original cookies as the final values.\n  for (const cookie of returnedCookies) {\n    resCookies.set(cookie)\n  }\n\n  return true\n}\n\ntype ResponseCookie = NonNullable<\n  ReturnType<InstanceType<typeof ResponseCookies>['get']>\n>\n\nexport class MutableRequestCookiesAdapter {\n  public static wrap(\n    cookies: RequestCookies,\n    onUpdateCookies?: (cookies: string[]) => void\n  ): ResponseCookies {\n    const responseCookies = new ResponseCookies(new Headers())\n    for (const cookie of cookies.getAll()) {\n      responseCookies.set(cookie)\n    }\n\n    let modifiedValues: ResponseCookie[] = []\n    const modifiedCookies = new Set<string>()\n    const updateResponseCookies = () => {\n      // TODO-APP: change method of getting workStore\n      const workStore = workAsyncStorage.getStore()\n      if (workStore) {\n        workStore.pathWasRevalidated = true\n      }\n\n      const allCookies = responseCookies.getAll()\n      modifiedValues = allCookies.filter((c) => modifiedCookies.has(c.name))\n      if (onUpdateCookies) {\n        const serializedCookies: string[] = []\n        for (const cookie of modifiedValues) {\n          const tempCookies = new ResponseCookies(new Headers())\n          tempCookies.set(cookie)\n          serializedCookies.push(tempCookies.toString())\n        }\n\n        onUpdateCookies(serializedCookies)\n      }\n    }\n\n    const wrappedCookies = new Proxy(responseCookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          // A special symbol to get the modified cookie values\n          case SYMBOL_MODIFY_COOKIE_VALUES:\n            return modifiedValues\n\n          // TODO: Throw error if trying to set a cookie after the response\n          // headers have been set.\n          case 'delete':\n            return function (...args: [string] | [ResponseCookie]) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                target.delete(...args)\n                return wrappedCookies\n              } finally {\n                updateResponseCookies()\n              }\n            }\n          case 'set':\n            return function (...args: SetCookieArgs) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                target.set(...args)\n                return wrappedCookies\n              } finally {\n                updateResponseCookies()\n              }\n            }\n\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n\n    return wrappedCookies\n  }\n}\n\nexport function createCookiesWithMutableAccessCheck(\n  requestStore: RequestStore\n): ResponseCookies {\n  const wrappedCookies = new Proxy(requestStore.mutableCookies, {\n    get(target, prop, receiver) {\n      switch (prop) {\n        case 'delete':\n          return function (...args: [string] | [ResponseCookie]) {\n            ensureCookiesAreStillMutable(requestStore, 'cookies().delete')\n            target.delete(...args)\n            return wrappedCookies\n          }\n        case 'set':\n          return function (...args: SetCookieArgs) {\n            ensureCookiesAreStillMutable(requestStore, 'cookies().set')\n            target.set(...args)\n            return wrappedCookies\n          }\n\n        default:\n          return ReflectAdapter.get(target, prop, receiver)\n      }\n    },\n  })\n  return wrappedCookies\n}\n\nexport function areCookiesMutableInCurrentPhase(requestStore: RequestStore) {\n  return requestStore.phase === 'action'\n}\n\n/** Ensure that cookies() starts throwing on mutation\n * if we changed phases and can no longer mutate.\n *\n * This can happen when going:\n *   'render' -> 'after'\n *   'action' -> 'render'\n * */\nfunction ensureCookiesAreStillMutable(\n  requestStore: RequestStore,\n  _callingExpression: string\n) {\n  if (!areCookiesMutableInCurrentPhase(requestStore)) {\n    // TODO: maybe we can give a more precise error message based on callingExpression?\n    throw new ReadonlyRequestCookiesError()\n  }\n}\n\nexport function responseCookiesToRequestCookies(\n  responseCookies: ResponseCookies\n): RequestCookies {\n  const requestCookies = new RequestCookies(new Headers())\n  for (const cookie of responseCookies.getAll()) {\n    requestCookies.set(cookie)\n  }\n  return requestCookies\n}\n","import * as React from 'react'\n\nconst errorRef: { current: null | Error } = { current: null }\n\n// React.cache is currently only available in canary/experimental React channels.\nconst cache =\n  typeof React.cache === 'function'\n    ? React.cache\n    : (fn: (key: unknown) => void) => fn\n\n// When Cache Components is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn = process.env.__NEXT_CACHE_COMPONENTS\n  ? console.error\n  : console.warn\n\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n  (key: unknown) => {\n    try {\n      logErrorOrWarn(errorRef.current)\n    } finally {\n      errorRef.current = null\n    }\n  }\n)\n\n/**\n * Creates a function that logs an error message that is deduped by the userland\n * callsite.\n * This requires no indirection between the call of this function and the userland\n * callsite i.e. there's only a single library frame above this.\n * Do not use on the Client where sourcemaps and ignore listing might be enabled.\n * Only use that for warnings need a fix independent of the callstack.\n *\n * @param getMessage\n * @returns\n */\nexport function createDedupedByCallsiteServerErrorLoggerDev<Args extends any[]>(\n  getMessage: (...args: Args) => Error\n) {\n  return function logDedupedError(...args: Args) {\n    const message = getMessage(...args)\n\n    if (process.env.NODE_ENV !== 'production') {\n      const callStackFrames = new Error().stack?.split('\\n')\n      if (callStackFrames === undefined || callStackFrames.length < 4) {\n        logErrorOrWarn(message)\n      } else {\n        // Error:\n        //   logDedupedError\n        //   asyncApiBeingAccessedSynchronously\n        //   <userland callsite>\n        // TODO: This breaks if sourcemaps with ignore lists are enabled.\n        const key = callStackFrames[4]\n        errorRef.current = message\n        flushCurrentErrorIfNew(key)\n      }\n    } else {\n      logErrorOrWarn(message)\n    }\n  }\n}\n","import { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { afterTaskAsyncStorage } from '../app-render/after-task-async-storage.external'\nimport type { WorkStore } from '../app-render/work-async-storage.external'\n\nexport function throwWithStaticGenerationBailoutError(\n  route: string,\n  expression: string\n): never {\n  throw new StaticGenBailoutError(\n    `Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n  )\n}\n\nexport function throwWithStaticGenerationBailoutErrorWithDynamicError(\n  route: string,\n  expression: string\n): never {\n  throw new StaticGenBailoutError(\n    `Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n  )\n}\n\nexport function throwForSearchParamsAccessInUseCache(\n  workStore: WorkStore,\n  constructorOpt: Function\n): never {\n  const error = new Error(\n    `Route ${workStore.route} used \"searchParams\" inside \"use cache\". Accessing dynamic request data inside a cache scope is not supported. If you need some search params inside a cached function await \"searchParams\" outside of the cached function and pass only the required search params as arguments to the cached function. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`\n  )\n\n  Error.captureStackTrace(error, constructorOpt)\n  workStore.invalidDynamicUsageError ??= error\n\n  throw error\n}\n\nexport function isRequestAPICallableInsideAfter() {\n  const afterTaskStore = afterTaskAsyncStorage.getStore()\n  return afterTaskStore?.rootTaskSpawnPhase === 'action'\n}\n","import {\n  type ReadonlyRequestCookies,\n  type ResponseCookies,\n  areCookiesMutableInCurrentPhase,\n  RequestCookiesAdapter,\n} from '../web/spec-extension/adapters/request-cookies'\nimport { RequestCookies } from '../web/spec-extension/cookies'\nimport {\n  workAsyncStorage,\n  type WorkStore,\n} from '../app-render/work-async-storage.external'\nimport {\n  throwForMissingRequestStore,\n  workUnitAsyncStorage,\n  type PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\nimport {\n  delayUntilRuntimeStage,\n  postponeWithTracking,\n  throwToInterruptStaticGeneration,\n  trackDynamicDataInDynamicRender,\n  trackSynchronousRequestDataAccessInDev,\n} from '../app-render/dynamic-rendering'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport {\n  makeDevtoolsIOAwarePromise,\n  makeHangingPromise,\n} from '../dynamic-rendering-utils'\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger'\nimport { isRequestAPICallableInsideAfter } from './utils'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { ReflectAdapter } from '../web/spec-extension/adapters/reflect'\n\n/**\n * In this version of Next.js `cookies()` returns a Promise however you can still reference the properties of the underlying cookies object\n * synchronously to facilitate migration. The `UnsafeUnwrappedCookies` type is added to your code by a codemod that attempts to automatically\n * updates callsites to reflect the new Promise return type. There are some cases where `cookies()` cannot be automatically converted, namely\n * when it is used inside a synchronous function and we can't be sure the function can be made async automatically. In these cases we add an\n * explicit type case to `UnsafeUnwrappedCookies` to enable typescript to allow for the synchronous usage only where it is actually necessary.\n *\n * You should should update these callsites to either be async functions where the `cookies()` value can be awaited or you should call `cookies()`\n * from outside and await the return value before passing it into this function.\n *\n * You can find instances that require manual migration by searching for `UnsafeUnwrappedCookies` in your codebase or by search for a comment that\n * starts with `@next-codemod-error`.\n *\n * In a future version of Next.js `cookies()` will only return a Promise and you will not be able to access the underlying cookies object directly\n * without awaiting the return value first. When this change happens the type `UnsafeUnwrappedCookies` will be updated to reflect that is it no longer\n * usable.\n *\n * This type is marked deprecated to help identify it as target for refactoring away.\n *\n * @deprecated\n */\nexport type UnsafeUnwrappedCookies = ReadonlyRequestCookies\n\nexport function cookies(): Promise<ReadonlyRequestCookies> {\n  const callingExpression = 'cookies'\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (workStore) {\n    if (\n      workUnitStore &&\n      workUnitStore.phase === 'after' &&\n      !isRequestAPICallableInsideAfter()\n    ) {\n      throw new Error(\n        // TODO(after): clarify that this only applies to pages?\n        `Route ${workStore.route} used \"cookies\" inside \"after(...)\". This is not supported. If you need this data inside an \"after\" callback, use \"cookies\" outside of the callback. See more info here: https://nextjs.org/docs/canary/app/api-reference/functions/after`\n      )\n    }\n\n    if (workStore.forceStatic) {\n      // When using forceStatic we override all other logic and always just return an empty\n      // cookies object without tracking\n      const underlyingCookies = createEmptyCookies()\n      return makeUntrackedExoticCookies(underlyingCookies)\n    }\n\n    if (workStore.dynamicShouldError) {\n      throw new StaticGenBailoutError(\n        `Route ${workStore.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`cookies\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n      )\n    }\n\n    if (workUnitStore) {\n      switch (workUnitStore.type) {\n        case 'cache':\n          const error = new Error(\n            `Route ${workStore.route} used \"cookies\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"cookies\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`\n          )\n          Error.captureStackTrace(error, cookies)\n          workStore.invalidDynamicUsageError ??= error\n          throw error\n        case 'unstable-cache':\n          throw new Error(\n            `Route ${workStore.route} used \"cookies\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"cookies\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`\n          )\n        case 'prerender':\n          return makeHangingCookies(workStore, workUnitStore)\n        case 'prerender-client':\n          const exportName = '`cookies`'\n          throw new InvariantError(\n            `${exportName} must not be used within a client component. Next.js should be preventing ${exportName} from being included in client components statically, but did not in this case.`\n          )\n        case 'prerender-ppr':\n          // We need track dynamic access here eagerly to keep continuity with\n          // how cookies has worked in PPR without cacheComponents.\n          return postponeWithTracking(\n            workStore.route,\n            callingExpression,\n            workUnitStore.dynamicTracking\n          )\n        case 'prerender-legacy':\n          // We track dynamic access here so we don't need to wrap the cookies\n          // in individual property access tracking.\n          return throwToInterruptStaticGeneration(\n            callingExpression,\n            workStore,\n            workUnitStore\n          )\n        case 'prerender-runtime':\n          return delayUntilRuntimeStage(\n            workUnitStore,\n            makeUntrackedCookies(workUnitStore.cookies)\n          )\n        case 'private-cache':\n          if (process.env.__NEXT_CACHE_COMPONENTS) {\n            return makeUntrackedCookies(workUnitStore.cookies)\n          }\n\n          return makeUntrackedExoticCookies(workUnitStore.cookies)\n        case 'request':\n          trackDynamicDataInDynamicRender(workUnitStore)\n\n          let underlyingCookies: ReadonlyRequestCookies\n\n          if (areCookiesMutableInCurrentPhase(workUnitStore)) {\n            // We can't conditionally return different types here based on the context.\n            // To avoid confusion, we always return the readonly type here.\n            underlyingCookies =\n              workUnitStore.userspaceMutableCookies as unknown as ReadonlyRequestCookies\n          } else {\n            underlyingCookies = workUnitStore.cookies\n          }\n\n          if (process.env.NODE_ENV === 'development') {\n            // Semantically we only need the dev tracking when running in `next dev`\n            // but since you would never use next dev with production NODE_ENV we use this\n            // as a proxy so we can statically exclude this code from production builds.\n            if (process.env.__NEXT_CACHE_COMPONENTS) {\n              return makeUntrackedCookiesWithDevWarnings(\n                underlyingCookies,\n                workStore?.route\n              )\n            }\n\n            return makeUntrackedExoticCookiesWithDevWarnings(\n              underlyingCookies,\n              workStore?.route\n            )\n          } else {\n            if (process.env.__NEXT_CACHE_COMPONENTS) {\n              return makeUntrackedCookies(underlyingCookies)\n            }\n\n            return makeUntrackedExoticCookies(underlyingCookies)\n          }\n        default:\n          workUnitStore satisfies never\n      }\n    }\n  }\n\n  // If we end up here, there was no work store or work unit store present.\n  throwForMissingRequestStore(callingExpression)\n}\n\nfunction createEmptyCookies(): ReadonlyRequestCookies {\n  return RequestCookiesAdapter.seal(new RequestCookies(new Headers({})))\n}\n\ninterface CacheLifetime {}\nconst CachedCookies = new WeakMap<\n  CacheLifetime,\n  Promise<ReadonlyRequestCookies>\n>()\n\nfunction makeHangingCookies(\n  workStore: WorkStore,\n  prerenderStore: PrerenderStoreModern\n): Promise<ReadonlyRequestCookies> {\n  const cachedPromise = CachedCookies.get(prerenderStore)\n  if (cachedPromise) {\n    return cachedPromise\n  }\n\n  const promise = makeHangingPromise<ReadonlyRequestCookies>(\n    prerenderStore.renderSignal,\n    workStore.route,\n    '`cookies()`'\n  )\n  CachedCookies.set(prerenderStore, promise)\n\n  return promise\n}\n\nfunction makeUntrackedCookies(\n  underlyingCookies: ReadonlyRequestCookies\n): Promise<ReadonlyRequestCookies> {\n  const cachedCookies = CachedCookies.get(underlyingCookies)\n  if (cachedCookies) {\n    return cachedCookies\n  }\n\n  const promise = Promise.resolve(underlyingCookies)\n  CachedCookies.set(underlyingCookies, promise)\n\n  return promise\n}\n\nfunction makeUntrackedExoticCookies(\n  underlyingCookies: ReadonlyRequestCookies\n): Promise<ReadonlyRequestCookies> {\n  const cachedCookies = CachedCookies.get(underlyingCookies)\n  if (cachedCookies) {\n    return cachedCookies\n  }\n\n  const promise = Promise.resolve(underlyingCookies)\n  CachedCookies.set(underlyingCookies, promise)\n\n  Object.defineProperties(promise, {\n    [Symbol.iterator]: {\n      value: underlyingCookies[Symbol.iterator]\n        ? underlyingCookies[Symbol.iterator].bind(underlyingCookies)\n        : // TODO this is a polyfill for when the underlying type is ResponseCookies\n          // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n          // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n          // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n          // has extra properties not available on RequestCookie instances.\n          polyfilledResponseCookiesIterator.bind(underlyingCookies),\n    },\n    size: {\n      get(): number {\n        return underlyingCookies.size\n      },\n    },\n    get: {\n      value: underlyingCookies.get.bind(underlyingCookies),\n    },\n    getAll: {\n      value: underlyingCookies.getAll.bind(underlyingCookies),\n    },\n    has: {\n      value: underlyingCookies.has.bind(underlyingCookies),\n    },\n    set: {\n      value: underlyingCookies.set.bind(underlyingCookies),\n    },\n    delete: {\n      value: underlyingCookies.delete.bind(underlyingCookies),\n    },\n    clear: {\n      value:\n        // @ts-expect-error clear is defined in RequestCookies implementation but not in the type\n        typeof underlyingCookies.clear === 'function'\n          ? // @ts-expect-error clear is defined in RequestCookies implementation but not in the type\n            underlyingCookies.clear.bind(underlyingCookies)\n          : // TODO this is a polyfill for when the underlying type is ResponseCookies\n            // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n            // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n            // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n            // has extra properties not available on RequestCookie instances.\n            polyfilledResponseCookiesClear.bind(underlyingCookies, promise),\n    },\n    toString: {\n      value: underlyingCookies.toString.bind(underlyingCookies),\n    },\n  } satisfies CookieExtensions)\n\n  return promise\n}\n\nfunction makeUntrackedExoticCookiesWithDevWarnings(\n  underlyingCookies: ReadonlyRequestCookies,\n  route?: string\n): Promise<ReadonlyRequestCookies> {\n  const cachedCookies = CachedCookies.get(underlyingCookies)\n  if (cachedCookies) {\n    return cachedCookies\n  }\n\n  const promise = makeDevtoolsIOAwarePromise(underlyingCookies)\n  CachedCookies.set(underlyingCookies, promise)\n\n  Object.defineProperties(promise, {\n    [Symbol.iterator]: {\n      value: function () {\n        const expression = '`...cookies()` or similar iteration'\n        syncIODev(route, expression)\n        return underlyingCookies[Symbol.iterator]\n          ? underlyingCookies[Symbol.iterator].apply(\n              underlyingCookies,\n              arguments as any\n            )\n          : // TODO this is a polyfill for when the underlying type is ResponseCookies\n            // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n            // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n            // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n            // has extra properties not available on RequestCookie instances.\n            polyfilledResponseCookiesIterator.call(underlyingCookies)\n      },\n      writable: false,\n    },\n    size: {\n      get(): number {\n        const expression = '`cookies().size`'\n        syncIODev(route, expression)\n        return underlyingCookies.size\n      },\n    },\n    get: {\n      value: function get() {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().get()`'\n        } else {\n          expression = `\\`cookies().get(${describeNameArg(arguments[0])})\\``\n        }\n        syncIODev(route, expression)\n        return underlyingCookies.get.apply(underlyingCookies, arguments as any)\n      },\n      writable: false,\n    },\n    getAll: {\n      value: function getAll() {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().getAll()`'\n        } else {\n          expression = `\\`cookies().getAll(${describeNameArg(arguments[0])})\\``\n        }\n        syncIODev(route, expression)\n        return underlyingCookies.getAll.apply(\n          underlyingCookies,\n          arguments as any\n        )\n      },\n      writable: false,\n    },\n    has: {\n      value: function get() {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().has()`'\n        } else {\n          expression = `\\`cookies().has(${describeNameArg(arguments[0])})\\``\n        }\n        syncIODev(route, expression)\n        return underlyingCookies.has.apply(underlyingCookies, arguments as any)\n      },\n      writable: false,\n    },\n    set: {\n      value: function set() {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().set()`'\n        } else {\n          const arg = arguments[0]\n          if (arg) {\n            expression = `\\`cookies().set(${describeNameArg(arg)}, ...)\\``\n          } else {\n            expression = '`cookies().set(...)`'\n          }\n        }\n        syncIODev(route, expression)\n        return underlyingCookies.set.apply(underlyingCookies, arguments as any)\n      },\n      writable: false,\n    },\n    delete: {\n      value: function () {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().delete()`'\n        } else if (arguments.length === 1) {\n          expression = `\\`cookies().delete(${describeNameArg(arguments[0])})\\``\n        } else {\n          expression = `\\`cookies().delete(${describeNameArg(arguments[0])}, ...)\\``\n        }\n        syncIODev(route, expression)\n        return underlyingCookies.delete.apply(\n          underlyingCookies,\n          arguments as any\n        )\n      },\n      writable: false,\n    },\n    clear: {\n      value: function clear() {\n        const expression = '`cookies().clear()`'\n        syncIODev(route, expression)\n        // @ts-ignore clear is defined in RequestCookies implementation but not in the type\n        return typeof underlyingCookies.clear === 'function'\n          ? // @ts-ignore clear is defined in RequestCookies implementation but not in the type\n            underlyingCookies.clear.apply(underlyingCookies, arguments)\n          : // TODO this is a polyfill for when the underlying type is ResponseCookies\n            // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n            // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n            // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n            // has extra properties not available on RequestCookie instances.\n            polyfilledResponseCookiesClear.call(underlyingCookies, promise)\n      },\n      writable: false,\n    },\n    toString: {\n      value: function toString() {\n        const expression = '`cookies().toString()` or implicit casting'\n        syncIODev(route, expression)\n        return underlyingCookies.toString.apply(\n          underlyingCookies,\n          arguments as any\n        )\n      },\n      writable: false,\n    },\n  } satisfies CookieExtensions)\n\n  return promise\n}\n\n// Similar to `makeUntrackedExoticCookiesWithDevWarnings`, but just logging the\n// sync access without actually defining the cookies properties on the promise.\nfunction makeUntrackedCookiesWithDevWarnings(\n  underlyingCookies: ReadonlyRequestCookies,\n  route?: string\n): Promise<ReadonlyRequestCookies> {\n  const cachedCookies = CachedCookies.get(underlyingCookies)\n  if (cachedCookies) {\n    return cachedCookies\n  }\n\n  const promise = makeDevtoolsIOAwarePromise(underlyingCookies)\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      switch (prop) {\n        case Symbol.iterator: {\n          warnForSyncAccess(route, '`...cookies()` or similar iteration')\n          break\n        }\n        case 'size':\n        case 'get':\n        case 'getAll':\n        case 'has':\n        case 'set':\n        case 'delete':\n        case 'clear':\n        case 'toString': {\n          warnForSyncAccess(route, `\\`cookies().${prop}\\``)\n          break\n        }\n        default: {\n          // We only warn for well-defined properties of the cookies object.\n        }\n      }\n\n      return ReflectAdapter.get(target, prop, receiver)\n    },\n  })\n\n  CachedCookies.set(underlyingCookies, proxiedPromise)\n\n  return proxiedPromise\n}\n\nfunction describeNameArg(arg: unknown) {\n  return typeof arg === 'object' &&\n    arg !== null &&\n    typeof (arg as any).name === 'string'\n    ? `'${(arg as any).name}'`\n    : typeof arg === 'string'\n      ? `'${arg}'`\n      : '...'\n}\n\nfunction syncIODev(route: string | undefined, expression: string) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'request':\n        if (workUnitStore.prerenderPhase === true) {\n          // When we're rendering dynamically in dev, we need to advance out of\n          // the Prerender environment when we read Request data synchronously.\n          trackSynchronousRequestDataAccessInDev(workUnitStore)\n        }\n        break\n      case 'prerender':\n      case 'prerender-client':\n      case 'prerender-runtime':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n      case 'cache':\n      case 'private-cache':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n\n  // In all cases we warn normally\n  warnForSyncAccess(route, expression)\n}\n\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(\n  createCookiesAccessError\n)\n\nfunction createCookiesAccessError(\n  route: string | undefined,\n  expression: string\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`cookies()\\` should be awaited before using its value. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\nfunction polyfilledResponseCookiesIterator(\n  this: ResponseCookies\n): ReturnType<ReadonlyRequestCookies[typeof Symbol.iterator]> {\n  return this.getAll()\n    .map((c) => [c.name, c] as [string, any])\n    .values()\n}\n\nfunction polyfilledResponseCookiesClear(\n  this: ResponseCookies,\n  returnable: Promise<ReadonlyRequestCookies>\n): typeof returnable {\n  for (const cookie of this.getAll()) {\n    this.delete(cookie.name)\n  }\n  return returnable\n}\n\ntype CookieExtensions = {\n  [K in keyof ReadonlyRequestCookies | 'clear']: unknown\n}\n","import type { IncomingHttpHeaders } from 'http'\n\nimport { ReflectAdapter } from './reflect'\n\n/**\n * @internal\n */\nexport class ReadonlyHeadersError extends Error {\n  constructor() {\n    super(\n      'Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyHeadersError()\n  }\n}\n\nexport type ReadonlyHeaders = Headers & {\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  append(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  set(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  delete(...args: any[]): void\n}\nexport class HeadersAdapter extends Headers {\n  private readonly headers: IncomingHttpHeaders\n\n  constructor(headers: IncomingHttpHeaders) {\n    // We've already overridden the methods that would be called, so we're just\n    // calling the super constructor to ensure that the instanceof check works.\n    super()\n\n    this.headers = new Proxy(headers, {\n      get(target, prop, receiver) {\n        // Because this is just an object, we expect that all \"get\" operations\n        // are for properties. If it's a \"get\" for a symbol, we'll just return\n        // the symbol.\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return undefined.\n        if (typeof original === 'undefined') return\n\n        // If the original casing exists, return the value.\n        return ReflectAdapter.get(target, original, receiver)\n      },\n      set(target, prop, value, receiver) {\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.set(target, prop, value, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, use the prop as the key.\n        return ReflectAdapter.set(target, original ?? prop, value, receiver)\n      },\n      has(target, prop) {\n        if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return false.\n        if (typeof original === 'undefined') return false\n\n        // If the original casing exists, return true.\n        return ReflectAdapter.has(target, original)\n      },\n      deleteProperty(target, prop) {\n        if (typeof prop === 'symbol')\n          return ReflectAdapter.deleteProperty(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return true.\n        if (typeof original === 'undefined') return true\n\n        // If the original casing exists, delete the property.\n        return ReflectAdapter.deleteProperty(target, original)\n      },\n    })\n  }\n\n  /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */\n  public static seal(headers: Headers): ReadonlyHeaders {\n    return new Proxy<ReadonlyHeaders>(headers, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'append':\n          case 'delete':\n          case 'set':\n            return ReadonlyHeadersError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n\n  /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */\n  private merge(value: string | string[]): string {\n    if (Array.isArray(value)) return value.join(', ')\n\n    return value\n  }\n\n  /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */\n  public static from(headers: IncomingHttpHeaders | Headers): Headers {\n    if (headers instanceof Headers) return headers\n\n    return new HeadersAdapter(headers)\n  }\n\n  public append(name: string, value: string): void {\n    const existing = this.headers[name]\n    if (typeof existing === 'string') {\n      this.headers[name] = [existing, value]\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      this.headers[name] = value\n    }\n  }\n\n  public delete(name: string): void {\n    delete this.headers[name]\n  }\n\n  public get(name: string): string | null {\n    const value = this.headers[name]\n    if (typeof value !== 'undefined') return this.merge(value)\n\n    return null\n  }\n\n  public has(name: string): boolean {\n    return typeof this.headers[name] !== 'undefined'\n  }\n\n  public set(name: string, value: string): void {\n    this.headers[name] = value\n  }\n\n  public forEach(\n    callbackfn: (value: string, name: string, parent: Headers) => void,\n    thisArg?: any\n  ): void {\n    for (const [name, value] of this.entries()) {\n      callbackfn.call(thisArg, value, name, this)\n    }\n  }\n\n  public *entries(): HeadersIterator<[string, string]> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(name) as string\n\n      yield [name, value] as [string, string]\n    }\n  }\n\n  public *keys(): HeadersIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      yield name\n    }\n  }\n\n  public *values(): HeadersIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(key) as string\n\n      yield value\n    }\n  }\n\n  public [Symbol.iterator](): HeadersIterator<[string, string]> {\n    return this.entries()\n  }\n}\n","import {\n  HeadersAdapter,\n  type ReadonlyHeaders,\n} from '../web/spec-extension/adapters/headers'\nimport {\n  workAsyncStorage,\n  type WorkStore,\n} from '../app-render/work-async-storage.external'\nimport {\n  throwForMissingRequestStore,\n  workUnitAsyncStorage,\n  type PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\nimport {\n  postponeWithTracking,\n  throwToInterruptStaticGeneration,\n  trackDynamicDataInDynamicRender,\n  trackSynchronousRequestDataAccessInDev,\n} from '../app-render/dynamic-rendering'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport {\n  makeDevtoolsIOAwarePromise,\n  makeHangingPromise,\n} from '../dynamic-rendering-utils'\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger'\nimport { isRequestAPICallableInsideAfter } from './utils'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { ReflectAdapter } from '../web/spec-extension/adapters/reflect'\n\n/**\n * In this version of Next.js `headers()` returns a Promise however you can still reference the properties of the underlying Headers instance\n * synchronously to facilitate migration. The `UnsafeUnwrappedHeaders` type is added to your code by a codemod that attempts to automatically\n * updates callsites to reflect the new Promise return type. There are some cases where `headers()` cannot be automatically converted, namely\n * when it is used inside a synchronous function and we can't be sure the function can be made async automatically. In these cases we add an\n * explicit type case to `UnsafeUnwrappedHeaders` to enable typescript to allow for the synchronous usage only where it is actually necessary.\n *\n * You should should update these callsites to either be async functions where the `headers()` value can be awaited or you should call `headers()`\n * from outside and await the return value before passing it into this function.\n *\n * You can find instances that require manual migration by searching for `UnsafeUnwrappedHeaders` in your codebase or by search for a comment that\n * starts with `@next-codemod-error`.\n *\n * In a future version of Next.js `headers()` will only return a Promise and you will not be able to access the underlying Headers instance\n * without awaiting the return value first. When this change happens the type `UnsafeUnwrappedHeaders` will be updated to reflect that is it no longer\n * usable.\n *\n * This type is marked deprecated to help identify it as target for refactoring away.\n *\n * @deprecated\n */\nexport type UnsafeUnwrappedHeaders = ReadonlyHeaders\n\n/**\n * This function allows you to read the HTTP incoming request headers in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers) and\n * [Middleware](https://nextjs.org/docs/app/building-your-application/routing/middleware).\n *\n * Read more: [Next.js Docs: `headers`](https://nextjs.org/docs/app/api-reference/functions/headers)\n */\nexport function headers(): Promise<ReadonlyHeaders> {\n  const callingExpression = 'headers'\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (workStore) {\n    if (\n      workUnitStore &&\n      workUnitStore.phase === 'after' &&\n      !isRequestAPICallableInsideAfter()\n    ) {\n      throw new Error(\n        `Route ${workStore.route} used \"headers\" inside \"after(...)\". This is not supported. If you need this data inside an \"after\" callback, use \"headers\" outside of the callback. See more info here: https://nextjs.org/docs/canary/app/api-reference/functions/after`\n      )\n    }\n\n    if (workStore.forceStatic) {\n      // When using forceStatic we override all other logic and always just return an empty\n      // headers object without tracking\n      const underlyingHeaders = HeadersAdapter.seal(new Headers({}))\n      return makeUntrackedExoticHeaders(underlyingHeaders)\n    }\n\n    if (workUnitStore) {\n      switch (workUnitStore.type) {\n        case 'cache': {\n          const error = new Error(\n            `Route ${workStore.route} used \"headers\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"headers\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`\n          )\n          Error.captureStackTrace(error, headers)\n          workStore.invalidDynamicUsageError ??= error\n          throw error\n        }\n        case 'private-cache': {\n          const error = new Error(\n            `Route ${workStore.route} used \"headers\" inside \"use cache: private\". Accessing \"headers\" inside a private cache scope is not supported. If you need this data inside a cached function use \"headers\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`\n          )\n          Error.captureStackTrace(error, headers)\n          workStore.invalidDynamicUsageError ??= error\n          throw error\n        }\n        case 'unstable-cache':\n          throw new Error(\n            `Route ${workStore.route} used \"headers\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"headers\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`\n          )\n        case 'prerender':\n        case 'prerender-client':\n        case 'prerender-runtime':\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n        case 'request':\n          break\n        default:\n          workUnitStore satisfies never\n      }\n    }\n\n    if (workStore.dynamicShouldError) {\n      throw new StaticGenBailoutError(\n        `Route ${workStore.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`headers\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n      )\n    }\n\n    if (workUnitStore) {\n      switch (workUnitStore.type) {\n        case 'prerender':\n        case 'prerender-runtime':\n          return makeHangingHeaders(workStore, workUnitStore)\n        case 'prerender-client':\n          const exportName = '`headers`'\n          throw new InvariantError(\n            `${exportName} must not be used within a client component. Next.js should be preventing ${exportName} from being included in client components statically, but did not in this case.`\n          )\n        case 'prerender-ppr':\n          // PPR Prerender (no cacheComponents)\n          // We are prerendering with PPR. We need track dynamic access here eagerly\n          // to keep continuity with how headers has worked in PPR without cacheComponents.\n          // TODO consider switching the semantic to throw on property access instead\n          return postponeWithTracking(\n            workStore.route,\n            callingExpression,\n            workUnitStore.dynamicTracking\n          )\n        case 'prerender-legacy':\n          // Legacy Prerender\n          // We are in a legacy static generation mode while prerendering\n          // We track dynamic access here so we don't need to wrap the headers in\n          // individual property access tracking.\n          return throwToInterruptStaticGeneration(\n            callingExpression,\n            workStore,\n            workUnitStore\n          )\n        case 'request':\n          trackDynamicDataInDynamicRender(workUnitStore)\n\n          if (process.env.NODE_ENV === 'development') {\n            // Semantically we only need the dev tracking when running in `next dev`\n            // but since you would never use next dev with production NODE_ENV we use this\n            // as a proxy so we can statically exclude this code from production builds.\n            if (process.env.__NEXT_CACHE_COMPONENTS) {\n              return makeUntrackedHeadersWithDevWarnings(\n                workUnitStore.headers,\n                workStore?.route\n              )\n            }\n\n            return makeUntrackedExoticHeadersWithDevWarnings(\n              workUnitStore.headers,\n              workStore?.route\n            )\n          } else {\n            if (process.env.__NEXT_CACHE_COMPONENTS) {\n              return makeUntrackedHeaders(workUnitStore.headers)\n            }\n\n            return makeUntrackedExoticHeaders(workUnitStore.headers)\n          }\n          break\n        default:\n          workUnitStore satisfies never\n      }\n    }\n  }\n\n  // If we end up here, there was no work store or work unit store present.\n  throwForMissingRequestStore(callingExpression)\n}\n\ninterface CacheLifetime {}\nconst CachedHeaders = new WeakMap<CacheLifetime, Promise<ReadonlyHeaders>>()\n\nfunction makeHangingHeaders(\n  workStore: WorkStore,\n  prerenderStore: PrerenderStoreModern\n): Promise<ReadonlyHeaders> {\n  const cachedHeaders = CachedHeaders.get(prerenderStore)\n  if (cachedHeaders) {\n    return cachedHeaders\n  }\n\n  const promise = makeHangingPromise<ReadonlyHeaders>(\n    prerenderStore.renderSignal,\n    workStore.route,\n    '`headers()`'\n  )\n  CachedHeaders.set(prerenderStore, promise)\n\n  return promise\n}\n\nfunction makeUntrackedHeaders(\n  underlyingHeaders: ReadonlyHeaders\n): Promise<ReadonlyHeaders> {\n  const cachedHeaders = CachedHeaders.get(underlyingHeaders)\n  if (cachedHeaders) {\n    return cachedHeaders\n  }\n\n  const promise = Promise.resolve(underlyingHeaders)\n  CachedHeaders.set(underlyingHeaders, promise)\n\n  return promise\n}\n\nfunction makeUntrackedExoticHeaders(\n  underlyingHeaders: ReadonlyHeaders\n): Promise<ReadonlyHeaders> {\n  const cachedHeaders = CachedHeaders.get(underlyingHeaders)\n  if (cachedHeaders) {\n    return cachedHeaders\n  }\n\n  const promise = Promise.resolve(underlyingHeaders)\n  CachedHeaders.set(underlyingHeaders, promise)\n\n  Object.defineProperties(promise, {\n    append: {\n      value: underlyingHeaders.append.bind(underlyingHeaders),\n    },\n    delete: {\n      value: underlyingHeaders.delete.bind(underlyingHeaders),\n    },\n    get: {\n      value: underlyingHeaders.get.bind(underlyingHeaders),\n    },\n    has: {\n      value: underlyingHeaders.has.bind(underlyingHeaders),\n    },\n    set: {\n      value: underlyingHeaders.set.bind(underlyingHeaders),\n    },\n    getSetCookie: {\n      value: underlyingHeaders.getSetCookie.bind(underlyingHeaders),\n    },\n    forEach: {\n      value: underlyingHeaders.forEach.bind(underlyingHeaders),\n    },\n    keys: {\n      value: underlyingHeaders.keys.bind(underlyingHeaders),\n    },\n    values: {\n      value: underlyingHeaders.values.bind(underlyingHeaders),\n    },\n    entries: {\n      value: underlyingHeaders.entries.bind(underlyingHeaders),\n    },\n    [Symbol.iterator]: {\n      value: underlyingHeaders[Symbol.iterator].bind(underlyingHeaders),\n    },\n  } satisfies HeadersExtensions)\n\n  return promise\n}\n\nfunction makeUntrackedExoticHeadersWithDevWarnings(\n  underlyingHeaders: ReadonlyHeaders,\n  route?: string\n): Promise<ReadonlyHeaders> {\n  const cachedHeaders = CachedHeaders.get(underlyingHeaders)\n  if (cachedHeaders) {\n    return cachedHeaders\n  }\n\n  const promise = makeDevtoolsIOAwarePromise(underlyingHeaders)\n\n  CachedHeaders.set(underlyingHeaders, promise)\n\n  Object.defineProperties(promise, {\n    append: {\n      value: function append() {\n        const expression = `\\`headers().append(${describeNameArg(arguments[0])}, ...)\\``\n        syncIODev(route, expression)\n        return underlyingHeaders.append.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    delete: {\n      value: function _delete() {\n        const expression = `\\`headers().delete(${describeNameArg(arguments[0])})\\``\n        syncIODev(route, expression)\n        return underlyingHeaders.delete.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    get: {\n      value: function get() {\n        const expression = `\\`headers().get(${describeNameArg(arguments[0])})\\``\n        syncIODev(route, expression)\n        return underlyingHeaders.get.apply(underlyingHeaders, arguments as any)\n      },\n    },\n    has: {\n      value: function has() {\n        const expression = `\\`headers().has(${describeNameArg(arguments[0])})\\``\n        syncIODev(route, expression)\n        return underlyingHeaders.has.apply(underlyingHeaders, arguments as any)\n      },\n    },\n    set: {\n      value: function set() {\n        const expression = `\\`headers().set(${describeNameArg(arguments[0])}, ...)\\``\n        syncIODev(route, expression)\n        return underlyingHeaders.set.apply(underlyingHeaders, arguments as any)\n      },\n    },\n    getSetCookie: {\n      value: function getSetCookie() {\n        const expression = '`headers().getSetCookie()`'\n        syncIODev(route, expression)\n        return underlyingHeaders.getSetCookie.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    forEach: {\n      value: function forEach() {\n        const expression = '`headers().forEach(...)`'\n        syncIODev(route, expression)\n        return underlyingHeaders.forEach.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    keys: {\n      value: function keys() {\n        const expression = '`headers().keys()`'\n        syncIODev(route, expression)\n        return underlyingHeaders.keys.apply(underlyingHeaders, arguments as any)\n      },\n    },\n    values: {\n      value: function values() {\n        const expression = '`headers().values()`'\n        syncIODev(route, expression)\n        return underlyingHeaders.values.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    entries: {\n      value: function entries() {\n        const expression = '`headers().entries()`'\n        syncIODev(route, expression)\n        return underlyingHeaders.entries.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    [Symbol.iterator]: {\n      value: function () {\n        const expression = '`...headers()` or similar iteration'\n        syncIODev(route, expression)\n        return underlyingHeaders[Symbol.iterator].apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n  } satisfies HeadersExtensions)\n\n  return promise\n}\n\n// Similar to `makeUntrackedExoticHeadersWithDevWarnings`, but just logging the\n// sync access without actually defining the headers properties on the promise.\nfunction makeUntrackedHeadersWithDevWarnings(\n  underlyingHeaders: ReadonlyHeaders,\n  route?: string\n): Promise<ReadonlyHeaders> {\n  const cachedHeaders = CachedHeaders.get(underlyingHeaders)\n  if (cachedHeaders) {\n    return cachedHeaders\n  }\n\n  const promise = makeDevtoolsIOAwarePromise(underlyingHeaders)\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      switch (prop) {\n        case Symbol.iterator: {\n          warnForSyncAccess(route, '`...headers()` or similar iteration')\n          break\n        }\n        case 'append':\n        case 'delete':\n        case 'get':\n        case 'has':\n        case 'set':\n        case 'getSetCookie':\n        case 'forEach':\n        case 'keys':\n        case 'values':\n        case 'entries': {\n          warnForSyncAccess(route, `\\`headers().${prop}\\``)\n          break\n        }\n        default: {\n          // We only warn for well-defined properties of the headers object.\n        }\n      }\n\n      return ReflectAdapter.get(target, prop, receiver)\n    },\n  })\n\n  CachedHeaders.set(underlyingHeaders, proxiedPromise)\n\n  return proxiedPromise\n}\n\nfunction describeNameArg(arg: unknown) {\n  return typeof arg === 'string' ? `'${arg}'` : '...'\n}\n\nfunction syncIODev(route: string | undefined, expression: string) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'request':\n        if (workUnitStore.prerenderPhase === true) {\n          // When we're rendering dynamically in dev, we need to advance out of\n          // the Prerender environment when we read Request data synchronously.\n          trackSynchronousRequestDataAccessInDev(workUnitStore)\n        }\n        break\n      case 'prerender':\n      case 'prerender-client':\n      case 'prerender-runtime':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n      case 'cache':\n      case 'private-cache':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n\n  // In all cases we warn normally\n  warnForSyncAccess(route, expression)\n}\n\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(\n  createHeadersAccessError\n)\n\nfunction createHeadersAccessError(\n  route: string | undefined,\n  expression: string\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`headers()\\` should be awaited before using its value. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\ntype HeadersExtensions = {\n  [K in keyof ReadonlyHeaders]: unknown\n}\n","import {\n  getDraftModeProviderForCacheScope,\n  throwForMissingRequestStore,\n} from '../app-render/work-unit-async-storage.external'\n\nimport type { DraftModeProvider } from '../async-storage/draft-mode-provider'\n\nimport {\n  workAsyncStorage,\n  type WorkStore,\n} from '../app-render/work-async-storage.external'\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external'\nimport {\n  abortAndThrowOnSynchronousRequestDataAccess,\n  delayUntilRuntimeStage,\n  postponeWithTracking,\n  trackDynamicDataInDynamicRender,\n  trackSynchronousRequestDataAccessInDev,\n} from '../app-render/dynamic-rendering'\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { ReflectAdapter } from '../web/spec-extension/adapters/reflect'\n\n/**\n * In this version of Next.js `draftMode()` returns a Promise however you can still reference the properties of the underlying draftMode object\n * synchronously to facilitate migration. The `UnsafeUnwrappedDraftMode` type is added to your code by a codemod that attempts to automatically\n * updates callsites to reflect the new Promise return type. There are some cases where `draftMode()` cannot be automatically converted, namely\n * when it is used inside a synchronous function and we can't be sure the function can be made async automatically. In these cases we add an\n * explicit type case to `UnsafeUnwrappedDraftMode` to enable typescript to allow for the synchronous usage only where it is actually necessary.\n *\n * You should should update these callsites to either be async functions where the `draftMode()` value can be awaited or you should call `draftMode()`\n * from outside and await the return value before passing it into this function.\n *\n * You can find instances that require manual migration by searching for `UnsafeUnwrappedDraftMode` in your codebase or by search for a comment that\n * starts with `@next-codemod-error`.\n *\n * In a future version of Next.js `draftMode()` will only return a Promise and you will not be able to access the underlying draftMode object directly\n * without awaiting the return value first. When this change happens the type `UnsafeUnwrappedDraftMode` will be updated to reflect that is it no longer\n * usable.\n *\n * This type is marked deprecated to help identify it as target for refactoring away.\n *\n * @deprecated\n */\nexport type UnsafeUnwrappedDraftMode = DraftMode\n\nexport function draftMode(): Promise<DraftMode> {\n  const callingExpression = 'draftMode'\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (!workStore || !workUnitStore) {\n    throwForMissingRequestStore(callingExpression)\n  }\n\n  switch (workUnitStore.type) {\n    case 'prerender-runtime':\n      // TODO(runtime-ppr): does it make sense to delay this? normally it's always microtasky\n      return delayUntilRuntimeStage(\n        workUnitStore,\n        createOrGetCachedDraftMode(workUnitStore.draftMode, workStore)\n      )\n    case 'request':\n      return createOrGetCachedDraftMode(workUnitStore.draftMode, workStore)\n\n    case 'cache':\n    case 'private-cache':\n    case 'unstable-cache':\n      // Inside of `\"use cache\"` or `unstable_cache`, draft mode is available if\n      // the outmost work unit store is a request store (or a runtime prerender),\n      // and if draft mode is enabled.\n      const draftModeProvider = getDraftModeProviderForCacheScope(\n        workStore,\n        workUnitStore\n      )\n\n      if (draftModeProvider) {\n        return createOrGetCachedDraftMode(draftModeProvider, workStore)\n      }\n\n    // Otherwise, we fall through to providing an empty draft mode.\n    // eslint-disable-next-line no-fallthrough\n    case 'prerender':\n    case 'prerender-client':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n      // Return empty draft mode\n      return createOrGetCachedDraftMode(null, workStore)\n\n    default:\n      return workUnitStore satisfies never\n  }\n}\n\nfunction createOrGetCachedDraftMode(\n  draftModeProvider: DraftModeProvider | null,\n  workStore: WorkStore | undefined\n): Promise<DraftMode> {\n  const cacheKey = draftModeProvider ?? NullDraftMode\n  const cachedDraftMode = CachedDraftModes.get(cacheKey)\n\n  if (cachedDraftMode) {\n    return cachedDraftMode\n  }\n\n  let promise: Promise<DraftMode>\n\n  if (process.env.NODE_ENV === 'development' && !workStore?.isPrefetchRequest) {\n    const route = workStore?.route\n\n    if (process.env.__NEXT_CACHE_COMPONENTS) {\n      return createDraftModeWithDevWarnings(draftModeProvider, route)\n    }\n\n    promise = createExoticDraftModeWithDevWarnings(draftModeProvider, route)\n  } else {\n    if (process.env.__NEXT_CACHE_COMPONENTS) {\n      return Promise.resolve(new DraftMode(draftModeProvider))\n    }\n\n    promise = createExoticDraftMode(draftModeProvider)\n  }\n\n  CachedDraftModes.set(cacheKey, promise)\n\n  return promise\n}\n\ninterface CacheLifetime {}\nconst NullDraftMode = {}\nconst CachedDraftModes = new WeakMap<CacheLifetime, Promise<DraftMode>>()\n\nfunction createExoticDraftMode(\n  underlyingProvider: null | DraftModeProvider\n): Promise<DraftMode> {\n  const instance = new DraftMode(underlyingProvider)\n  const promise = Promise.resolve(instance)\n\n  Object.defineProperty(promise, 'isEnabled', {\n    get() {\n      return instance.isEnabled\n    },\n    enumerable: true,\n    configurable: true,\n  })\n  ;(promise as any).enable = instance.enable.bind(instance)\n  ;(promise as any).disable = instance.disable.bind(instance)\n\n  return promise\n}\n\nfunction createExoticDraftModeWithDevWarnings(\n  underlyingProvider: null | DraftModeProvider,\n  route: undefined | string\n): Promise<DraftMode> {\n  const instance = new DraftMode(underlyingProvider)\n  const promise = Promise.resolve(instance)\n\n  Object.defineProperty(promise, 'isEnabled', {\n    get() {\n      const expression = '`draftMode().isEnabled`'\n      syncIODev(route, expression)\n      return instance.isEnabled\n    },\n    enumerable: true,\n    configurable: true,\n  })\n\n  Object.defineProperty(promise, 'enable', {\n    value: function get() {\n      const expression = '`draftMode().enable()`'\n      syncIODev(route, expression)\n      return instance.enable.apply(instance, arguments as any)\n    },\n  })\n\n  Object.defineProperty(promise, 'disable', {\n    value: function get() {\n      const expression = '`draftMode().disable()`'\n      syncIODev(route, expression)\n      return instance.disable.apply(instance, arguments as any)\n    },\n  })\n\n  return promise\n}\n\n// Similar to `createExoticDraftModeWithDevWarnings`, but just logging the sync\n// access without actually defining the draftMode properties on the promise.\nfunction createDraftModeWithDevWarnings(\n  underlyingProvider: null | DraftModeProvider,\n  route: undefined | string\n): Promise<DraftMode> {\n  const instance = new DraftMode(underlyingProvider)\n  const promise = Promise.resolve(instance)\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      switch (prop) {\n        case 'isEnabled':\n          warnForSyncAccess(route, `\\`draftMode().${prop}\\``)\n          break\n        case 'enable':\n        case 'disable': {\n          warnForSyncAccess(route, `\\`draftMode().${prop}()\\``)\n          break\n        }\n        default: {\n          // We only warn for well-defined properties of the draftMode object.\n        }\n      }\n\n      return ReflectAdapter.get(target, prop, receiver)\n    },\n  })\n\n  return proxiedPromise\n}\n\nclass DraftMode {\n  /**\n   * @internal - this declaration is stripped via `tsc --stripInternal`\n   */\n  private readonly _provider: null | DraftModeProvider\n\n  constructor(provider: null | DraftModeProvider) {\n    this._provider = provider\n  }\n  get isEnabled() {\n    if (this._provider !== null) {\n      return this._provider.isEnabled\n    }\n    return false\n  }\n  public enable() {\n    // We have a store we want to track dynamic data access to ensure we\n    // don't statically generate routes that manipulate draft mode.\n    trackDynamicDraftMode('draftMode().enable()', this.enable)\n    if (this._provider !== null) {\n      this._provider.enable()\n    }\n  }\n  public disable() {\n    trackDynamicDraftMode('draftMode().disable()', this.disable)\n    if (this._provider !== null) {\n      this._provider.disable()\n    }\n  }\n}\n\nfunction syncIODev(route: string | undefined, expression: string) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'request':\n        if (workUnitStore.prerenderPhase === true) {\n          // When we're rendering dynamically in dev, we need to advance out of\n          // the Prerender environment when we read Request data synchronously.\n          trackSynchronousRequestDataAccessInDev(workUnitStore)\n        }\n        break\n      case 'prerender':\n      case 'prerender-client':\n      case 'prerender-runtime':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n      case 'cache':\n      case 'private-cache':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n\n  // In all cases we warn normally\n  warnForSyncAccess(route, expression)\n}\n\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(\n  createDraftModeAccessError\n)\n\nfunction createDraftModeAccessError(\n  route: string | undefined,\n  expression: string\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`draftMode()\\` should be awaited before using its value. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\nfunction trackDynamicDraftMode(expression: string, constructorOpt: Function) {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (workStore) {\n    // We have a store we want to track dynamic data access to ensure we\n    // don't statically generate routes that manipulate draft mode.\n    if (workUnitStore?.phase === 'after') {\n      throw new Error(\n        `Route ${workStore.route} used \"${expression}\" inside \\`after\\`. The enabled status of draftMode can be read inside \\`after\\` but you cannot enable or disable draftMode. See more info here: https://nextjs.org/docs/app/api-reference/functions/after`\n      )\n    }\n\n    if (workStore.dynamicShouldError) {\n      throw new StaticGenBailoutError(\n        `Route ${workStore.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n      )\n    }\n\n    if (workUnitStore) {\n      switch (workUnitStore.type) {\n        case 'cache':\n        case 'private-cache': {\n          const error = new Error(\n            `Route ${workStore.route} used \"${expression}\" inside \"use cache\". The enabled status of draftMode can be read in caches but you must not enable or disable draftMode inside a cache. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`\n          )\n          Error.captureStackTrace(error, constructorOpt)\n          workStore.invalidDynamicUsageError ??= error\n          throw error\n        }\n        case 'unstable-cache':\n          throw new Error(\n            `Route ${workStore.route} used \"${expression}\" inside a function cached with \"unstable_cache(...)\". The enabled status of draftMode can be read in caches but you must not enable or disable draftMode inside a cache. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`\n          )\n\n        case 'prerender':\n        case 'prerender-runtime': {\n          const error = new Error(\n            `Route ${workStore.route} used ${expression} without first calling \\`await connection()\\`. See more info here: https://nextjs.org/docs/messages/next-prerender-sync-headers`\n          )\n          return abortAndThrowOnSynchronousRequestDataAccess(\n            workStore.route,\n            expression,\n            error,\n            workUnitStore\n          )\n        }\n        case 'prerender-client':\n          const exportName = '`draftMode`'\n          throw new InvariantError(\n            `${exportName} must not be used within a client component. Next.js should be preventing ${exportName} from being included in client components statically, but did not in this case.`\n          )\n        case 'prerender-ppr':\n          return postponeWithTracking(\n            workStore.route,\n            expression,\n            workUnitStore.dynamicTracking\n          )\n        case 'prerender-legacy':\n          workUnitStore.revalidate = 0\n\n          const err = new DynamicServerError(\n            `Route ${workStore.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n          )\n          workStore.dynamicUsageDescription = expression\n          workStore.dynamicUsageStack = err.stack\n\n          throw err\n        case 'request':\n          trackDynamicDataInDynamicRender(workUnitStore)\n          break\n        default:\n          workUnitStore satisfies never\n      }\n    }\n  }\n}\n","module.exports.cookies = require('./dist/server/request/cookies').cookies\nmodule.exports.headers = require('./dist/server/request/headers').headers\nmodule.exports.draftMode = require('./dist/server/request/draft-mode').draftMode\n","// This function ensures that all the exported values are valid server actions,\n// during the runtime. By definition all actions are required to be async\n// functions, but here we can only check that they are functions.\nexport function ensureServerEntryExports(actions: any[]) {\n  for (let i = 0; i < actions.length; i++) {\n    const action = actions[i]\n    if (typeof action !== 'function') {\n      throw new Error(\n        `A \"use server\" file can only export async functions, found ${typeof action}.\\nRead more: https://nextjs.org/docs/messages/invalid-use-server-value`\n      )\n    }\n  }\n}\n","\"use server\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nexport async function apiFetch(path: string, init?: RequestInit) {\r\n  const cookieStore = await cookies();\r\n  const accessToken = cookieStore?.get(\"accessToken\")?.value;\r\n\r\n  const base = process.env.NEXT_PUBLIC_BASE_API || \"\";\r\n  const url = `${base}${path.startsWith(\"/\") ? path : `/${path}`}`;\r\n\r\n  const mergedHeaders: HeadersInit = {\r\n    ...(init?.headers || {}),\r\n    ...(accessToken ? { Authorization: `Bearer ${accessToken}` } : {}),\r\n  };\r\n\r\n  return fetch(url, {\r\n    cache: \"no-store\",\r\n    ...init,\r\n    headers: mergedHeaders,\r\n  });\r\n}\r\n","\"use server\";\r\nimport { apiFetch } from \"@/lib/apiFetch\";\r\n\r\ntype GetUsersParams = {\r\n  page?: number | string | undefined;\r\n  limit?: number | string | undefined;\r\n  searchTerm?: string | undefined;\r\n  role?: string | undefined;\r\n  isActive?: string | undefined;\r\n  sort?: string | undefined;\r\n  fields?: string | undefined;\r\n};\r\n\r\nexport async function getAllUsers(params: GetUsersParams = {}) {\r\n  const query = new URLSearchParams();\r\n\r\n  if (params.page) query.set(\"page\", String(params.page));\r\n  if (params.limit) query.set(\"limit\", String(params.limit));\r\n  if (params.searchTerm) query.set(\"searchTerm\", params.searchTerm);\r\n  if (params.role && params.role !== \"all\") query.set(\"role\", params.role);\r\n  if (params.isActive && params.isActive !== \"all\")\r\n    query.set(\"isActive\", params.isActive);\r\n  if (params.sort) query.set(\"sort\", params.sort);\r\n  if (params.fields) query.set(\"fields\", params.fields);\r\n\r\n  const path = `/user/all-users${\r\n    query.toString() ? `?${query.toString()}` : \"\"\r\n  }`;\r\n  const res = await apiFetch(path);\r\n  return res.json();\r\n}\r\n\r\nexport async function getAllProjects() {\r\n  const res = await apiFetch(\"/project\");\r\n  return res.json();\r\n}\r\n"],"names":["registerServerReference","RequestCookies","ResponseCookies","stringifyCookie","ReflectAdapter","get","target","prop","receiver","value","Reflect","bind","set","has","deleteProperty","MutableRequestCookiesAdapter","ReadonlyRequestCookiesError","RequestCookiesAdapter","appendMutableCookies","areCookiesMutableInCurrentPhase","createCookiesWithMutableAccessCheck","getModifiedCookieValues","responseCookiesToRequestCookies","Error","constructor","callable","seal","cookies","Proxy","SYMBOL_MODIFY_COOKIE_VALUES","Symbol","for","modified","Array","isArray","length","headers","mutableCookies","modifiedCookieValues","resCookies","returnedCookies","getAll","cookie","wrap","onUpdateCookies","responseCookies","Headers","modifiedValues","modifiedCookies","Set","updateResponseCookies","workStore","workAsyncStorage","getStore","pathWasRevalidated","allCookies","filter","c","name","serializedCookies","tempCookies","push","toString","wrappedCookies","args","add","delete","requestStore","ensureCookiesAreStillMutable","phase","_callingExpression","requestCookies","createDedupedByCallsiteServerErrorLoggerDev","errorRef","current","cache","React","fn","logErrorOrWarn","process","env","__NEXT_CACHE_COMPONENTS","console","error","warn","flushCurrentErrorIfNew","key","getMessage","logDedupedError","message","NODE_ENV","callStackFrames","stack","split","undefined","isRequestAPICallableInsideAfter","throwForSearchParamsAccessInUseCache","throwWithStaticGenerationBailoutError","throwWithStaticGenerationBailoutErrorWithDynamicError","route","expression","StaticGenBailoutError","constructorOpt","captureStackTrace","invalidDynamicUsageError","afterTaskStore","afterTaskAsyncStorage","rootTaskSpawnPhase","callingExpression","workUnitStore","workUnitAsyncStorage","forceStatic","underlyingCookies","createEmptyCookies","makeUntrackedExoticCookies","dynamicShouldError","type","makeHangingCookies","exportName","InvariantError","postponeWithTracking","dynamicTracking","throwToInterruptStaticGeneration","delayUntilRuntimeStage","makeUntrackedCookies","trackDynamicDataInDynamicRender","userspaceMutableCookies","makeUntrackedCookiesWithDevWarnings","makeUntrackedExoticCookiesWithDevWarnings","throwForMissingRequestStore","CachedCookies","WeakMap","prerenderStore","cachedPromise","promise","makeHangingPromise","renderSignal","cachedCookies","Promise","resolve","Object","defineProperties","iterator","polyfilledResponseCookiesIterator","size","clear","polyfilledResponseCookiesClear","makeDevtoolsIOAwarePromise","syncIODev","apply","arguments","call","writable","describeNameArg","arg","proxiedPromise","warnForSyncAccess","prerenderPhase","trackSynchronousRequestDataAccessInDev","createCookiesAccessError","prefix","map","values","returnable","HeadersAdapter","ReadonlyHeadersError","lowercased","toLowerCase","original","keys","find","o","merge","join","from","append","existing","forEach","callbackfn","thisArg","entries","underlyingHeaders","makeUntrackedExoticHeaders","makeHangingHeaders","makeUntrackedHeadersWithDevWarnings","makeUntrackedExoticHeadersWithDevWarnings","makeUntrackedHeaders","CachedHeaders","cachedHeaders","getSetCookie","_delete","createHeadersAccessError","draftMode","createOrGetCachedDraftMode","draftModeProvider","getDraftModeProviderForCacheScope","cacheKey","NullDraftMode","cachedDraftMode","CachedDraftModes","isPrefetchRequest","createDraftModeWithDevWarnings","createExoticDraftModeWithDevWarnings","DraftMode","createExoticDraftMode","underlyingProvider","instance","defineProperty","isEnabled","enumerable","configurable","enable","disable","provider","_provider","trackDynamicDraftMode","createDraftModeAccessError","abortAndThrowOnSynchronousRequestDataAccess","revalidate","err","DynamicServerError","dynamicUsageDescription","dynamicUsageStack","ensureServerEntryExports","actions","i","action"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}